name: Ubuntu
on:
  push:
    paths:
      - "src/**"
      - "!**.md"
      - "!**.cmake"
      - ".github/**"
  pull_request:
    paths:
      - "src/**"
      - "!**.md"
      - "!**.cmake"  
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        qt_ver: [6.6.3]
        qt_arch: [gcc_64]
    env:
      targetName: sast-gallery
      QT_MODULES: "qt5compat qtmultimedia"
    steps:
      - name: check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
    
      - name: install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          modules: ${{ env.QT_MODULES }}

      - name: setup Ninja
        uses: ashutoshvarma/setup-ninja@v1.1
        with:
          version: "1.12.1"

      - name: install GL library (Ubuntu)
        run: sudo apt-get install -y libxcb-cursor0 libgl1-mesa-dev libxcb1-dev libgtk-3-dev libxkbcommon-x11-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-sync-dev  libxcb-render-util0-dev libxcb-shm0-dev
      
      - name: ubuntu install libfuse2
        run: sudo apt install libfuse2
      
      - name: install Fcitx5 for Qt
        run: |
          sudo apt-get install -y extra-cmake-modules
          git clone --depth 1 --branch 5.1.1 https://github.com/fcitx/fcitx5-qt
          cmake -DBUILD_ONLY_PLUGIN=ON -DENABLE_QT4=OFF -DENABLE_QT5=OFF -DENABLE_QT6=ON -G Ninja -S ./fcitx5-qt -B ./fcitx5-qt-build -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} -DCMAKE_BUILD_TYPE=Release
          cmake --build ./fcitx5-qt-build --parallel --config Release
          cmake --install ./fcitx5-qt-build
  
      - name: Configure CMake
        run: cmake -G Ninja -S ${{ github.workspace }} -B ${{ github.workspace }}/build -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} -DCMAKE_BUILD_TYPE=Release
  
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release --parallel

      - name: install Qt linux deploy
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt appimage
      - name: package
        env: 
          EXTRA_QT_PLUGINS: qt5compat
        run: |
          echo "[Desktop Entry]" > sast-gallery-appimage.desktop
          echo "Categories=Pictures;" >> sast-gallery-appimage.desktop
          echo "Icon=res/icon/app_icon" >> sast-gallery-appimage.desktop
          echo "Name=SAST Gallery" >> sast-gallery-appimage.desktop
          echo "Type=Application" >> sast-gallery-appimage.desktop
          echo "Exec=sast-gallery" >> sast-gallery-appimage.desktop
          linuxdeploy-x86_64.AppImage --output=appimage --desktop-file=sast-gallery-appimage.desktop --icon-file=res/icon/app_icon.svg --executable=build/Release/sast-gallery --appdir AppDir
          mv sast*.AppImage ${{ env.targetName }}_appimage_x86_64.AppImage
      
      - name: Calculate SHA256
        run: |
          touch sast-gallery.sha256
          sha256sum ${{ env.targetName }}_appimage_x86_64.AppImage > sast-gallery.sha256
          echo "SHA256 value is:"
          cat sast-gallery.sha256
  
      - uses: actions/upload-artifact@v4
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          name: ${{ env.targetName }}_sha256
          path: sast-gallery.sha256
  
      - name: upload SHA256
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sast-gallery.sha256
          asset_name: sast-gallery-appimage.sha256
          tag: ${{ github.ref }}
          overwrite: true
      - uses: actions/upload-artifact@v4
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          name: ${{ env.targetName }}_appimage_x86_64.AppImage
          path: ${{ env.targetName }}_appimage_x86_64.AppImage
      
      - name: upload release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.targetName }}_appimage_x86_64.AppImage
          asset_name: ${{ env.targetName }}_appimage_x86_64.AppImage
          tag: ${{ github.ref }}
          overwrite: true